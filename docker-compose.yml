version: '3.8'

services:
  prolysi:
    build:
      context: /home/prolysi/prolysi-ai-ventures
      dockerfile: Dockerfile
    container_name: prolysi
    env_file: .env.prolysi
    environment:
      - VIRTUAL_HOST=prolysi.com     # ðŸ‘ˆ REQUIRED
      - VIRTUAL_PORT=80                 # ðŸ‘ˆ Must match EXPOSE in Dockerfile
    expose:
      - "80"                            # ðŸ‘ˆ Required for nginx-proxy to detect
    restart: always
    networks:
      - web  

  strapi:
    build: ./strapi
    env_file: .env.strapi
    volumes:
      - strapi-public:/app/public
      - strapi-sqlite:/app/.tmp
    restart: always
    networks:
      - web

  nextjs:
    build: ./next
    env_file: .env.nextjs
    expose:
      - '3000'
    volumes:
      - next-data:/app
    restart: always
    networks:
      - web

  nginx:
    container_name: nginx
    image: nginxproxy/nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - acme:/etc/acme.sh
      - nginx-challenges:/usr/share/nginx/html/.well-known/acme-challenge
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
    restart: always
    networks:
      - web

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: letsencrypt
    depends_on:
      - nginx
    env_file: .env.letsencrypt
    volumes:
      - acme:/etc/acme.sh
      - nginx-challenges:/usr/share/nginx/html/.well-known/acme-challenge
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
    restart: always
    networks:
      - web

volumes:
  strapi-public:
  strapi-sqlite:
  next-data:
  nginx-certs:
  nginx-vhost:
  nginx-html:
  acme:
  nginx-challenges:

networks:
  web:
    external: false
